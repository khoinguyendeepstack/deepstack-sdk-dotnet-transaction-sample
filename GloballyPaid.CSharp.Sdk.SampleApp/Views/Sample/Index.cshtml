@inject Microsoft.Extensions.Configuration.IConfiguration configuration;

@{
    ViewData["Title"] = "Sample";
}

@section Styles{
    <style>
        .example-div {
            width: 55%;
            padding: 20px 20px 19px 20px;
            margin: 15px;
        }
        .example-table {
            width: 100%;
        }
        .right {
            text-align: right;
            margin-right: 1em;
        }
    </style>
}

@{var total = 11.84;}
@Html.Hidden("myVar", total)

<section>
    <div class="example-div">
        <table class="example-table" border="0">
            @* <tr> *@
            @*     <td><b>Order Summary</b></td> *@
            @*     <td></td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td colspan="2"><hr /></td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td>Items:</td> *@
            @*     <td class="right">$10.73</td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td>Shipping & handling:</td> *@
            @*     <td class="right">$0.00</td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td>Total before tax:</td> *@
            @*     <td class="right">$10.73</td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td>Estimated tax to be collected:</td> *@
            @*     <td class="right">$0.85</td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td colspan="2"><hr /></td> *@
            @* </tr> *@
            @* <tr> *@
            @*     <td><b>Order Total:</b></td> *@
            @*     <td class="right">$@total</td> *@
            @* </tr> *@
            <tr>
                <td>Transaction Amount</td>
                <td><input type="text" id="transactionTotal" placeholder="0"/></td>
            </tr>
        </table>
    </div>
</section>

<section>
    <div class="example-div" id="gpg-form-container"></div>
</section>

<section>
    <div id="responseContainer" class="example-div">
        <p>API Response</p>
        <textarea id="apiResponse" rows="10" cols="60" readonly></textarea>
    </div>
</section>

@section Scripts{
    @* <script src="https://unpkg.com/&#64;globallypaid/js-sdk&#64;3.1.1"></script> *@
    @* <script src="https://jssdk.deepstack.io/payments/sdk/3.1.0/jssdk.js"></script> *@
    <script src="https://jssdk.deepstack.io/payments/sdk/3.1.0/index.js"></script>

    <script type="text/javascript">
        var inputValue = document.getElementById("transactionTotal");
        var apiResponseField = document.getElementById("apiResponse");
        document.getElementById("transactionTotal").addEventListener("input", function (){
           var input = this.value.replace(/[^\d.]/g, "");
           var dollarAmount = input === "" ? "" : "$" + input;
           
           this.value = dollarAmount;
           
        });
        
        function convertToCents(){
            var inputFieldValue = inputValue.value;
            var cents = dollarsToCents(inputFieldValue);
            console.log(cents);
            if (isNaN(cents)){
                return 0;
            }
            return cents;
        }
        function dollarsToCents(dollarAmount){
            var numericValue = parseFloat(dollarAmount.replace(/[^\d.]/g,""));
            return Math.round(numericValue * 100);
        }
    </script>

    <script type="text/javascript">
        var gpg = new DeepStackSDK('@configuration["GloballyPaidSandbox:PublishableApiKey"]');
        // var gpg = new GloballyPaidSDK('@configuration["GloballyPaidSandbox:PublishableApiKey"]');
        var cardExtended = gpg.createForm('card-extended');
        // var cardExtended = gpg.createForm('card-simple');
        cardExtended.mount('gpg-form-container');
    
        cardExtended.on('FORM_RESPONSE',
            (token) => {
                console.log(token);
    
                token.amount =  convertToCents();
    
                var data = JSON.stringify(token);
                console.log(data);
    
                // submit transaction to your server
                // make sure you're submitting the token instead of the card data
                // and storing the token on your servers
                jQuery.ajax({
                    type: "POST",
                    url: "/Sample/Charge",
                    data: data,
                    contentType: "application/json",
                    datatype: "json",
                    async: false,
                    success: function (responseFromServer) {
                        // cardExtended.showSuccess();
                        apiResponseField.value = JSON.stringify(responseFromServer, null, 4);
                        console.log(responseFromServer);
                        cardExtended.resetForm();
                    },
                    error: function (ajax_error) {
                        cardExtended.showError("Charge Failed: " + ajax_error.responseText);
                        apiResponseField.value = "Error:\n " + JSON.stringify(ajax_error, null, 4);
                        console.log(ajax_error);
                    }
                });

            },
            (error) => {
                cardExtended.showError("Charge Failed. Please check your browser console for logs.");
            }
        );

        // Company must be OneClick enebled
        cardExtended.on('ONE_CLICK_PAYMENT_SUBMIT',
            (oneClickData) => {
                console.log(oneClickData);

                // Prepare Charge Request (Sale request)
                var saleObject = {
                    "source": oneClickData.token,
                    "amount": 100 * ($('#myVar').val()),
                    //    "billingContact": token.billingContact  // check the spec for token.billingContact//taken from web application
                };

                var data = JSON.stringify(saleObject);

                // submit transaction to your server
                // make sure you're submitting the token instead of the card data
                // and storing the token on your servers
                jQuery.ajax({
                    type: "POST",
                    url: "/Sample/Charge",
                    data: data,
                    contentType: "application/json",
                    datatype: "json",
                    async: false,
                    success: function (responseFromServer) {
                        alert("Done. Approved: " + responseFromServer.approved)
                        console.log(responseFromServer);
                    },
                    error: function (ajax_error) {
                        alert("Charge Failed. Please check your browser console for logs.")
                        console.log(ajax_error);
                    }
                });

            },
            (error) => {
                cardExtended.showError("Charge Failed. Please check your browser console for logs.");
                console.log(error);
            }
        );

    </script>
}



